/* Generated by AN DISI Unibo */ 
package it.unibo.alarmdevice

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Alarmdevice ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		val interruptedStateTransitions = mutableListOf<Transition>()
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outred("alarm device START...")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="alarm", cond=doswitch() )
				}	 
				state("alarm") { //this:State
					action { //it:State
						delay(8000) 
						CommUtils.outred("invio allarme di stop al transporttrolley")
						forward("stop", "stop(_)" ,"transporttrolley" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_alarm", 
				 	 					  scope, context!!, "local_tout_alarmdevice_alarm", 1500.toLong() )
					}	 	 
					 transition(edgeName="t013",targetState="resume",cond=whenTimeout("local_tout_alarmdevice_alarm"))   
				}	 
				state("resume") { //this:State
					action { //it:State
						CommUtils.outred("invio resume al transporttrolley")
						forward("resume", "resume(_)" ,"transporttrolley" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
}
